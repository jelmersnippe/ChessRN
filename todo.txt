- Implement pawn promotion
- Calculate the possible moves for both colors on every move switch, but make the color parameter optional (so we can use the generate function in other places aswell)

- Clean up epics -> move large logic blocks to external functions
- Add move history
- Re-add animated movement
- Turn the board state back into a fen string

Change move generation so you can (optionally) pass a color as parameter
When checking if moves are legal by generating all opposing moves:
 -> Only pinned pieces will generate a check when moved
 -> Pieces can only be pinned by the rook, bishop and queen. So we dont have to generate moves for all other opposing pieces
 -> It would be even better to recognise a pin when a move is committed, and save it to the state. Then we only have to validate moves and update pins when any of the pinned squares/involved pieces change

Take castling and en passant into account when generating possible moves. A pawn can currently capture en passant and reveal a discovered attack on the king because the script does not take into account that the opposing pawn will be removed

After setting the board, save pieces in the state. Update these pieces when a move is committed. By doing this we don't have to generate all pieces from the board every turn

-> Add castling logic to makeMove/undoMove functions
-> Properly remove and place back en passant captured pieces in the makeMove/undoMove functions
-> Add timer functionality and better console logging so we can see more specific results without having to write 8 logs every time

